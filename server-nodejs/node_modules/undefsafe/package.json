{
  "_args": [
    [
      {
        "raw": "undefsafe@^2.0.1",
        "scope": null,
        "escapedName": "undefsafe",
        "name": "undefsafe",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/home/projects/workspace-vuejs/employee-manager-app/server-nodejs/node_modules/nodemon"
    ]
  ],
  "_from": "undefsafe@>=2.0.1 <3.0.0",
  "_id": "undefsafe@2.0.1",
  "_inCache": true,
  "_location": "/undefsafe",
  "_nodeVersion": "4.7.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/undefsafe-2.0.1.tgz_1487686936366_0.436940515646711"
  },
  "_npmUser": {
    "name": "remy",
    "email": "remy@leftlogic.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "raw": "undefsafe@^2.0.1",
    "scope": null,
    "escapedName": "undefsafe",
    "name": "undefsafe",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nodemon"
  ],
  "_resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.1.tgz",
  "_shasum": "03b2f2a16c94556e14b2edef326cd66aaf82707a",
  "_shrinkwrap": null,
  "_spec": "undefsafe@^2.0.1",
  "_where": "/home/projects/workspace-vuejs/employee-manager-app/server-nodejs/node_modules/nodemon",
  "author": {
    "name": "Remy Sharp"
  },
  "bugs": {
    "url": "https://github.com/remy/undefsafe/issues"
  },
  "dependencies": {
    "debug": "^2.2.0"
  },
  "description": "Undefined safe way of extracting object properties",
  "devDependencies": {
    "semantic-release": "^4.3.5",
    "tap": "^5.7.1",
    "tap-only": "0.0.5"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "03b2f2a16c94556e14b2edef326cd66aaf82707a",
    "tarball": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.1.tgz"
  },
  "gitHead": "29c8d32ee4e8780b81b6964a54e2b049194f4670",
  "homepage": "https://github.com/remy/undefsafe#readme",
  "keywords": [
    "undefined"
  ],
  "license": "MIT",
  "main": "lib/undefsafe.js",
  "maintainers": [
    {
      "name": "remy",
      "email": "remy@remysharp.com"
    }
  ],
  "name": "undefsafe",
  "optionalDependencies": {},
  "readme": "# undefsafe\n\nSimple *function* for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\"\n\nCan also be used to safely set deep values.\n\n## Usage\n\n```js\nvar object = {\n  a: {\n    b: {\n      c: 1,\n      d: [1,2,3],\n      e: 'remy'\n    }\n  }\n};\n\nconsole.log(undefsafe(object, 'a.b.e')); // \"remy\"\nconsole.log(undefsafe(object, 'a.b.not.found')); // undefined\n```\n\nDemo: [https://jsbin.com/eroqame/3/edit?js,console](https://jsbin.com/eroqame/3/edit?js,console)\n\n## Setting\n\n```js\nvar object = {\n  a: {\n    b: [1,2,3]\n  }\n};\n\n// modified object\nvar res = undefsafe(object, 'a.b.0', 10);\n\nconsole.log(object); // { a: { b: [10, 2, 3] } }\nconsole.log(res); // 1 - previous value\n```\n\n## Star rules in paths\n\nAs of 1.2.0, `undefsafe` supports a `*` in the path if you want to search all of the properties (or array elements) for a particular element.\n\nThe function will only return a single result, either the 3rd argument validation value, or the first positive match. For example, the following github data:\n\n```js\nconst githubData = {\n        commits: [{\n          modified: [\n            \"one\",\n            \"two\"\n          ]\n        }, /* ... */ ]\n      };\n\n// first modified file found in the first commit\nconsole.log(undefsafe(githubData, 'commits.*.modified.0'));\n\n// returns `two` or undefined if not found\nconsole.log(undefsafe(githubData, 'commits.*.modified.*', 'two'));\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/remy/undefsafe.git"
  },
  "scripts": {
    "cover": "tap test/*.test.js --cov --coverage-report=lcov",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "tap test/**/*.test.js -R spec"
  },
  "tonicExampleFilename": "example.js",
  "version": "2.0.1"
}
