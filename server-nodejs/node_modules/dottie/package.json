{
  "_args": [
    [
      {
        "raw": "dottie@^2.0.0",
        "scope": null,
        "escapedName": "dottie",
        "name": "dottie",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/projects/workspace-vuejs/employee-manager-app/server-nodejs/node_modules/sequelize"
    ]
  ],
  "_from": "dottie@>=2.0.0 <3.0.0",
  "_id": "dottie@2.0.0",
  "_inCache": true,
  "_location": "/dottie",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/dottie-2.0.0.tgz_1483386389800_0.0574006384704262"
  },
  "_npmUser": {
    "name": "mickhansen",
    "email": "mick.kasper.hansen@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dottie@^2.0.0",
    "scope": null,
    "escapedName": "dottie",
    "name": "dottie",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sequelize"
  ],
  "_resolved": "https://registry.npmjs.org/dottie/-/dottie-2.0.0.tgz",
  "_shasum": "da191981c8b8d713ca0115d5898cf397c2f0ddd0",
  "_shrinkwrap": null,
  "_spec": "dottie@^2.0.0",
  "_where": "/home/projects/workspace-vuejs/employee-manager-app/server-nodejs/node_modules/sequelize",
  "author": {
    "name": "Mick Hansen",
    "email": "maker@mhansen.io"
  },
  "bugs": {
    "url": "https://github.com/mickhansen/dottie.js/issues"
  },
  "dependencies": {},
  "description": "Fast and safe nested object access and manipulation in JavaScript",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "mocha": "~1.14.0"
  },
  "directories": {},
  "dist": {
    "shasum": "da191981c8b8d713ca0115d5898cf397c2f0ddd0",
    "tarball": "https://registry.npmjs.org/dottie/-/dottie-2.0.0.tgz"
  },
  "gitHead": "93e2fa41fd1886c51fbfce2bd904e3f1d81e1902",
  "homepage": "https://github.com/mickhansen/dottie.js#readme",
  "main": "dottie.js",
  "maintainers": [
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    }
  ],
  "name": "dottie",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mickhansen/dottie.js.svg?branch=master)](https://travis-ci.org/mickhansen/dottie.js)\n\nDottie helps you easily (and with sacrificing too much performance) look up and play with nested keys in objects, without them throwing up in your face.\n\n## Install\n    npm install dottie\n\n## Usage\nFor detailed usage, check source or tests.\n\n### Get value\nGets nested value, or undefined if unreachable, or a default value if passed.\n\n```js\nvar values = {\n  some: {\n    nested: {\n        key: 'foobar';\n    }\n  },\n  'some.dot.included': {\n    key: 'barfoo'\n  }\n}\n\ndottie.get(values, 'some.nested.key'); // returns 'foobar'\ndottie.get(values, 'some.undefined.key'); // returns undefined\ndottie.get(values, 'some.undefined.key', 'defaultval'); // returns 'defaultval'\ndottie.get(values, ['some.dot.included', 'key']); // returns 'barfoo'\n```\n\n### Set value\nSets nested value, creates nested structure if needed\n\n```js\ndottie.set(values, 'some.nested.value', someValue);\ndottie.set(values, ['some.dot.included', 'value'], someValue);\ndottie.set(values, 'some.nested.object', someValue, {\n  force: true // force overwrite defined non-object keys into objects if needed\n});\n```\n\n### Transform object\nTransform object from keys with dottie notation to nested objects\n\n```js\nvar values = {\n  'user.name': 'Gummy Bear',\n  'user.email': 'gummybear@candymountain.com',\n  'user.professional.title': 'King',\n  'user.professional.employer': 'Candy Mountain'\n};\nvar transformed = dottie.transform(values);\n\n/*\n{\n  user: {\n    name: 'Gummy Bear',\n    email: 'gummybear@candymountain.com',\n    professional: {\n      title: 'King',\n      employer: 'Candy Mountain'\n    }\n  }\n}\n*/\n```\n\n#### With a custom delimiter\n\n```js\nvar values = {\n  'user_name': 'Mick Hansen',\n  'user_email': 'maker@mhansen.io'\n};\nvar transformed = dottie.transform(values, { delimiter: '_' });\n\n/*\n{\n  user: {\n    name: 'Mick Hansen',\n    email: 'maker@mhansen.io'\n  }\n}\n*/\n```\n\n### Get paths in object\n```js\nvar object = {\n  a: 1,\n  b: {\n    c: 2,\n    d: { e: 3 }\n  }\n};\n\ndottie.paths(object); // [\"a\", \"b.c\", \"b.d.e\"];\n```\n\n## Performance\n\n`0.3.1` and up ships with `dottie.memoizePath: true` by default, if this causes any bugs, please try setting it to false\n\n## License\n\n[MIT](https://github.com/mickhansen/dottie.js/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mickhansen/dottie.js.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha -t 5000 -s 100 --reporter spec test/"
  },
  "version": "2.0.0"
}
